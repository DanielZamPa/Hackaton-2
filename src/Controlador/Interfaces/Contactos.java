// üìÅ Archivo: Interfaces/Contactos.java
// üéØ Esta interfaz define las "reglas del juego" para todo el proyecto

package Controlador.Interfaces;

public interface Contactos {

    // üî¢ CONSTANTES DEL PROYECTO (valores que NUNCA cambian)
    // public static final = son valores fijos para todo el proyecto
    // Es como tener las "reglas oficiales" escritas en piedra

    // Configuraciones para tel√©fonos
    int MIN_LONGITUD_TELEFONO = 7;   // M√≠nimo 7 d√≠gitos (ej: 1234567)
    int MAX_LONGITUD_TELEFONO = 15;  // M√°ximo 15 d√≠gitos (n√∫meros internacionales)

    // Configuraci√≥n para la agenda
    int TAMA√ëO_AGENDA_DEFAULT = 10;  // Si no especifican tama√±o, ser√°n 10 contactos

    // üìù MENSAJES DE ERROR EST√ÅNDAR
    // Esto hace que el programa se vea m√°s profesional y consistente
    String ERROR_NOMBRE_VACIO = "‚ùå Error: El nombre no puede estar vac√≠o";
    String ERROR_APELLIDO_VACIO = "‚ùå Error: El apellido no puede estar vac√≠o";
    String ERROR_TELEFONO_INVALIDO = "‚ùå Error: El tel√©fono debe tener entre " +
            MIN_LONGITUD_TELEFONO + " y " +
            MAX_LONGITUD_TELEFONO + " n√∫meros";
    String ERROR_CONTACTO_DUPLICADO = "‚ùå Error: Ya existe un contacto con ese nombre y apellido";
    String ERROR_AGENDA_LLENA = "‚ùå Error: La agenda est√° llena, no se puede agregar m√°s contactos";

    // üé® MENSAJES DE √âXITO (para hacer el programa m√°s amigable)
    String EXITO_CONTACTO_AGREGADO = "‚úÖ Contacto agregado exitosamente";
    String EXITO_CONTACTO_ELIMINADO = "‚úÖ Contacto eliminado exitosamente";
    String EXITO_TELEFONO_MODIFICADO = "‚úÖ Tel√©fono modificado exitosamente";

    // üìã M√âTODOS QUE DEBE IMPLEMENTAR CUALQUIER CLASE DE CONTACTO
    // (Como un "contrato" que dice qu√© debe poder hacer un contacto)

    /**
     * üìû Valida si un tel√©fono tiene el formato correcto
     * @param telefono el n√∫mero a validar
     * @return true si es v√°lido, false si no lo es
     */
    boolean esTelefonoValido(String telefono);

    /**
     * üìÑ Devuelve la informaci√≥n del contacto en formato texto
     * @return String con la informaci√≥n del contacto
     */
    String obtenerInformacion();

    /**
     * ‚úÖ Verifica si los datos b√°sicos del contacto son v√°lidos
     * @return true si nombre, apellido y tel√©fono son v√°lidos
     */
    boolean esValido();
}

// ü§ù C√ìMO USARLA:
// - En clase Contacto: implements Contactos
// - Para usar constantes: Contactos.MIN_LONGITUD_TELEFONO
// - Para usar mensajes: Contactos.ERROR_NOMBRE_VACIO